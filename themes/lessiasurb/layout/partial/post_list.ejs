<ul class="posts">
<% var page_size = config.per_page_dynamic || 5;
  page.posts.each(function (post, index) {
    var page = Math.floor(index / page_size); -%>
  <li class="post">
    <a class="cover" href="<%= url_for(post.link || post.path) %>" title="<%= post.title %>">
      <% if (page != 0) { -%>
      <noscript>
      <% } -%>
      <img src="<%= post.featured_image %>" alt="<%= post.title %>">
      <% if (page != 0) { -%>
      </noscript>
      <% } -%>
    </a>
    <div class="details">
      <p><%= date(post.date) %></p>
      <h3 class="title">
        <a href="<%= url_for(post.link || post.path) %>" title="<%= post.title %>">
          <%= post.title %>
        </a>
        <% if (post.subtitle) { -%>
          <br>
          <small><%- post.subtitle -%></small>
        <% } -%>
      </h3>
      <p><%= post.excerpt %></p>
    </div>
  </li>
<% });-%>
</ul>
<script>
  (function () {
    function DynamicListLoader(ul, page_size) {
      this.ul = ul;
      this.page_size = page_size;
      var post,
          more;
      function nextPostToHide() {
        return ul.querySelector(':scope > li.post:nth-child(1n+' + (page_size + 1) + ')');
      }
      if (post = nextPostToHide()) {
        do {
          post.className = 'hidden-post';
        } while (post = nextPostToHide());
        this.more_container = document.createElement('li');
        this.more_container.className = 'more';
        more = document.createElement('button');
        more.innerHTML = 'More Posts';
        more.addEventListener('click', this.showNextPage.bind(this));
        this.more_container.appendChild(more);
        ul.appendChild(this.more_container);
      }
    }
    DynamicListLoader.prototype.showNextPage = function() {
      var n_elements_to_show = this.page_size,
          li,
          noscript;
      this.more_container.remove();
      while (n_elements_to_show) {
        if (!(li = this.ul.querySelector(':scope > li.hidden-post'))) { // first hidden post
          break;
        }
        while (noscript = li.querySelector('noscript')) { // for each noscript
          noscript.insertAdjacentHTML('beforebegin', noscript.innerHTML); // parse and insert content before node
          noscript.remove(); // remove the noscript
        }
        li.className = 'post'; // make the post visible
        n_elements_to_show -= 1;
      }
      if (this.ul.querySelector(':scope > li.hidden-post')) {
        this.ul.appendChild(this.more_container);
      }
    }
    new DynamicListLoader(document.querySelector('ul.posts'), <%= page_size %>);
  })();
  (function () {
    document.querySelector('a[href="#posts"]').addEventListener('click', function (event) {
      document.querySelector('a[name="posts"]').scrollIntoView({behavior: "smooth", block: "start", inline: "nearest"});
      event.preventDefault();
    });
  })();
</script>
